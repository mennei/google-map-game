{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nvar mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nvar MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      ballLocation: {\n        lat: 0,\n        lng: 0\n      },\n      goalLocation: {\n        lat: 0,\n        lng: 0\n      },\n      loading: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMarkerDragEnd\", function (coord) {\n      var latLng = coord.latLng;\n      var lat = latLng.lat();\n      var lng = latLng.lng();\n\n      _this.setState({\n        ballLocation: {\n          lat: lat,\n          lng: lng\n        },\n        loading: false\n      }, function () {\n        var _this$state = _this.state,\n            ballLocation = _this$state.ballLocation,\n            goalLocation = _this$state.goalLocation;\n        ballLocation = _JSON$stringify(ballLocation);\n        goalLocation = _JSON$stringify(goalLocation);\n        return fetch(\"http://localhost:3000/api/v1/googleMap/getDistance?ballLocation=\".concat(ballLocation, \"&goalLocation=\").concat(goalLocation)).then(function (resopnse) {\n          return resopnse.json();\n        }).then(function (data) {\n          _this.setState({\n            ballLocation: {\n              lat: lat,\n              lng: lng\n            },\n            loading: false\n          });\n\n          if (data && data['data'] < 0.01) {\n            console.log('GOAL!!!!!!!!!');\n            alert('GOAL!!!!!!');\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var _position$coords = position.coords,\n            latitude = _position$coords.latitude,\n            longitude = _position$coords.longitude;\n\n        _this2.setState({\n          ballLocation: {\n            lat: 33.02499278880199,\n            lng: 35.28442144393921\n          }\n        }, function () {\n          console.log(_this2.state);\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          loading = _this$state2.loading,\n          ballLocation = _this$state2.ballLocation;\n      var url = \"http://localhost:3000/api/v1/googleMap/getGoalLocationService?latitude=\".concat(ballLocation.lat, \"&longitude=\").concat(ballLocation.lng);\n\n      if (loading) {\n        fetch(url).then(function (resopnse) {\n          return resopnse.json();\n        }).then(function (data) {\n          _this3.setState({\n            goalLocation: {\n              lat: data.data.lat,\n              lng: data.data.lng\n            },\n            loading: false\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state3 = this.state,\n          loading = _this$state3.loading,\n          ballLocation = _this$state3.ballLocation,\n          goalLocation = _this$state3.goalLocation;\n      var google = this.props.google;\n\n      if (loading) {\n        return null;\n      }\n\n      return React.createElement(Map, {\n        google: google,\n        zoom: 16,\n        style: mapStyles,\n        initialCenter: ballLocation\n      }, React.createElement(Marker, {\n        name: 'Ball position',\n        position: ballLocation,\n        icon: {\n          url: 'static/ball.png',\n          anchor: new google.maps.Point(32, 32),\n          scaledSize: new google.maps.Size(34, 34)\n        },\n        draggable: true,\n        onDragend: function onDragend(t, map, coord) {\n          return _this4.onMarkerDragEnd(coord);\n        }\n      }), React.createElement(Marker, {\n        name: 'Goal position',\n        position: {\n          lat: goalLocation.lat,\n          lng: goalLocation.lng\n        },\n        icon: {\n          url: 'static/goal.png',\n          anchor: new google.maps.Point(32, 32),\n          scaledSize: new google.maps.Size(54, 54)\n        }\n      }));\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDUb9IkmIUP3Wlzir40A0jn3bR4FbBpl1k'\n})(MapContainer);","map":{"version":3,"sources":["C:\\Users\\user\\projects\\ludus\\menachem-app\\src\\fe\\MapContainer.js"],"names":["React","Component","fetch","Map","GoogleApiWrapper","Marker","mapStyles","width","height","MapContainer","ballLocation","lat","lng","goalLocation","loading","coord","latLng","setState","state","then","resopnse","json","data","console","log","alert","catch","err","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","url","google","props","anchor","maps","Point","scaledSize","Size","t","map","onMarkerDragEnd","apiKey"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport {Map, GoogleApiWrapper, Marker} from 'google-maps-react';\r\n\r\nconst mapStyles = {\r\n  width: '100%',\r\n  height: '100%',\r\n};\r\n\r\nclass MapContainer extends Component {\r\n  state = {\r\n    ballLocation: {\r\n      lat: 0,\r\n      lng: 0,\r\n    },\r\n    goalLocation: {\r\n      lat: 0,\r\n      lng: 0,\r\n    },\r\n    loading: true,\r\n  };\r\n\r\n  componentDidMount () {\r\n    navigator.geolocation.getCurrentPosition (position => {\r\n      const {latitude, longitude} = position.coords;\r\n      this.setState (\r\n        {\r\n          ballLocation: {\r\n            lat: 33.02499278880199,\r\n            lng: 35.28442144393921,\r\n          },\r\n        },\r\n        () => {\r\n          console.log (this.state);\r\n        }\r\n      );\r\n    });\r\n  }\r\n  componentDidUpdate () {\r\n    const {loading, ballLocation} = this.state;\r\n    const url = `http://localhost:3000/api/v1/googleMap/getGoalLocationService?latitude=${ballLocation.lat}&longitude=${ballLocation.lng}`;\r\n    if (loading) {\r\n      fetch (url)\r\n        .then (resopnse => resopnse.json ())\r\n        .then (data => {\r\n          this.setState ({\r\n            goalLocation: {\r\n              lat: data.data.lat,\r\n              lng: data.data.lng,\r\n            },\r\n            loading: false,\r\n          });\r\n        })\r\n        .catch (err => console.log (err));\r\n    }\r\n  }\r\n\r\n  onMarkerDragEnd = coord => {\r\n    const {latLng} = coord;\r\n    const lat = latLng.lat ();\r\n    const lng = latLng.lng ();\r\n    this.setState (\r\n      {\r\n        ballLocation: {lat: lat, lng: lng},\r\n        loading: false,\r\n      },\r\n      () => {\r\n        let {ballLocation, goalLocation} = this.state;\r\n        ballLocation = JSON.stringify (ballLocation);\r\n        goalLocation = JSON.stringify (goalLocation);\r\n        return fetch (\r\n          `http://localhost:3000/api/v1/googleMap/getDistance?ballLocation=${ballLocation}&goalLocation=${goalLocation}`\r\n        )\r\n          .then (resopnse => resopnse.json ())\r\n          .then (data => {\r\n            this.setState ({\r\n              ballLocation: {lat: lat, lng: lng},\r\n              loading: false,\r\n            });\r\n            if (data && data['data'] < 0.01) {\r\n              console.log ('GOAL!!!!!!!!!');\r\n              alert ('GOAL!!!!!!');\r\n            }\r\n          })\r\n          .catch (err => console.log (err));\r\n      }\r\n    );\r\n  };\r\n\r\n  render () {\r\n    const {loading, ballLocation, goalLocation} = this.state;\r\n    const {google} = this.props;\r\n\r\n    if (loading) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Map\r\n        google={google}\r\n        zoom={16}\r\n        style={mapStyles}\r\n        initialCenter={ballLocation}\r\n      >\r\n        <Marker\r\n          name={'Ball position'}\r\n          position={ballLocation}\r\n          icon={{\r\n            url: 'static/ball.png',\r\n            anchor: new google.maps.Point (32, 32),\r\n            scaledSize: new google.maps.Size (34, 34),\r\n          }}\r\n          draggable={true}\r\n          onDragend={(t, map, coord) => this.onMarkerDragEnd (coord)}\r\n        />\r\n\r\n        <Marker\r\n          name={'Goal position'}\r\n          position={{lat: goalLocation.lat, lng: goalLocation.lng}}\r\n          icon={{\r\n            url: 'static/goal.png',\r\n            anchor: new google.maps.Point (32, 32),\r\n            scaledSize: new google.maps.Size (54, 54),\r\n          }}\r\n        />\r\n\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper ({\r\n  apiKey: 'AIzaSyDUb9IkmIUP3Wlzir40A0jn3bR4FbBpl1k',\r\n}) (MapContainer);\r\n"]},"metadata":{},"sourceType":"module"}